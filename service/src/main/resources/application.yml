debug: true
spring:
  application.name: asset-management
  profiles.active: ${ASSET_PROFILE:dev}
  zipkin:
    base-url: ${ZIPKIN_BASE_URL:http://zipkin:9411}
    sender:
      type: web
    enabled: true
  sleuth:
    sampler:
      probability: "1.0"
  jpa:
    show-sql: false
    properties:
      hibernate:
        jdbc.batch_size: 10 #batch_size
        batch_versioned_data: true
        order_inserts: true
        order_updates: true
        jdbc.time_zone: UTC
# Actuator endpoint Configuration
management.health.db.enabled: false
management.endpoint.health.probes.enabled: true
management.health.livenessstate.enabled: true
management.health.readinessstate.enabled: true
management.endpoints.web.exposure.include: env,health,info,loggers,metrics,threaddump

#management.endpoints.web.exposure.include: loggers,health
management.endpoint.loggers.enabled: true
management.endpoint.health.group.readiness.include: "*"
management.endpoint.health.group.readiness.show-details: always
management.endpoint.health.group.liveness.include: ping
management.endpoint.health.group.liveness.show-details: never
#management.health.db.enabled: false
health.endpoint.security.api-key: ${ACTUATOR_API_KEY:}

---
# Profile for standard development environment
spring:
  profiles: dev
  liquibase.enabled: true
  h2.console.enabled: false
  jackson:
    default-property-inclusion: NON_NULL
  datasource:
    url: jdbc:sqlserver://localhost:1433;encrypt=false;trustServerCertificate=true
    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver
    username: super
    password: yourStrong(!)Password
    tenant_identifier_resolver: com.exec.asset.management.util.MultiTenantIdentifierResolver
    multi_tenant_connection_provider: com.exec.asset.management.util.MultiTenantConnectionProviderImpl

asset:
  kafka:
    bootstrap.servers: localhost:9092
    group.id: ${spring.application.name}
    key.serializer: org.apache.kafka.common.serialization.StringSerializer
    value.serializer: org.apache.kafka.common.serialization.StringSerializer
    topics:
      asset-promotion: asset.events.asset-promoted
logging:
  level:
    root: info
    com.exec.asset.management: debug
    org.apache.kafka.clients.NetworkClient: error
multitenant:
  provisioning:
    database:
      template: IF ((select count(*) from sys.databases where name = N'{database_name}') = 0) BEGIN CREATE DATABASE [{database_name}] ALTER DATABASE [{database_name}] SET READ_COMMITTED_SNAPSHOT ON END;
  datasource:
    url:
      template: ${spring.datasource.url};databaseName=assetManagement_{tenant_id}
server:
  port: 8080
